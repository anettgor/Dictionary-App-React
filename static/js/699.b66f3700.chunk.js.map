{"version":3,"file":"static/js/699.b66f3700.chunk.js","mappings":"6NACA,EAA4B,0BAA5B,EAA8D,sBAA9D,EAA6F,uB,SCmC7F,MA9BA,WACE,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAajB,OACE,kBAAMC,UAAWC,EAAeC,SAZb,SAAAC,GACnBA,EAAEC,iBACGR,GAA0B,KAAjBA,EAAMS,QAGlBP,GAASQ,EAAAA,EAAAA,GAAUV,EAAMS,SACzBF,EAAEI,cAAcC,QAChBX,EAAS,KAJTY,MAAM,uBAMT,EAGC,WACE,kBACET,UAAWC,EACXS,KAAK,OACLC,YAAY,yBACZC,SAAU,SAAAT,GAAC,OAAIN,EAASM,EAAEU,OAAOjB,MAAtB,KAEb,mBAAQI,UAAWC,EAAYS,KAAK,SAApC,UACE,SAAC,MAAD,CAAmBI,KAAM,GAAIC,KAAM,gBAI1C,C","sources":["webpack://dictionary-app-react/./src/components/Search/Search.module.css?06df","components/Search/Search.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Search_container__JDaLY\",\"input\":\"Search_input__PXR0c\",\"submit\":\"Search_submit__rLaER\"};","import React from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { HiMagnifyingGlass } from 'react-icons/hi2';\nimport { fetchWord } from './../../redux/operations';\nimport css from './Search.module.css';\nfunction Search() {\n  const [value, setValue] = useState('');\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value || value.trim() === '') {\n      alert('Please enter a value');\n    } else {\n      dispatch(fetchWord(value.trim()));\n      e.currentTarget.reset();\n      setValue('');\n    }\n  };\n\n  return (\n    <form className={css.container} onSubmit={handleSubmit}>\n      <input\n        className={css.input}\n        type=\"text\"\n        placeholder=\"Search for any word...\"\n        onChange={e => setValue(e.target.value)}\n      />\n      <button className={css.submit} type=\"submit\">\n        <HiMagnifyingGlass size={20} fill={'#a445ed'} />\n      </button>\n    </form>\n  );\n}\n\nexport default Search;\n"],"names":["useState","value","setValue","dispatch","useDispatch","className","css","onSubmit","e","preventDefault","trim","fetchWord","currentTarget","reset","alert","type","placeholder","onChange","target","size","fill"],"sourceRoot":""}